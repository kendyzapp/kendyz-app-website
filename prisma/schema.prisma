generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
    provider          = "postgresql"
    url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
    shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model Category {
    id          String       @id @default(uuid())
    name        String       @unique
    prestations Prestation[]
}

enum PrestationStatus {
    DRAFT
    PUBLISHED
}

model Prestation {
    id             String           @id @default(uuid())
    status         PrestationStatus @default(DRAFT)
    organizationId String
    name           String           @unique
    description    String
    image          String
    category       Category         @relation(fields: [categoryId], references: [id])
    categoryId     String
    services       Service[]
    bookings       Booking[]
}

model Service {
    id           String     @id @default(uuid())
    name         String
    description  String
    prestation   Prestation @relation(fields: [prestationId], references: [id], onDelete: Cascade)
    prestationId String
    Booking      Booking?   @relation(fields: [bookingId], references: [id])
    bookingId    String?
}

enum BookingStatus {
    CANCELLED
    CREATED
    CONFIRMED
}

model Booking {
    id           String        @id @default(uuid())
    status       BookingStatus @default(CREATED)
    datetime     DateTime
    clientId     String
    description  String?
    prestation   Prestation    @relation(fields: [prestationId], references: [id])
    prestationId String
    services     Service[]
}

model Message {
    id String @id @default(uuid())
}
